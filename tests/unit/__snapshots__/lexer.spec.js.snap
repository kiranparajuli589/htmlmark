// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lexer codeblock should be set just with indentation bigger or equals to 4 below newline 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "zero one two",
    "type": "paragraph",
    "value": "zero one two",
  },
  Object {
    "type": "new-line",
  },
  Object {
    "indent": 4,
    "language": null,
    "raw": "    one
          two
    three",
    "type": "code-block",
    "value": "one
      two
three",
  },
  Object {
    "indent": 0,
    "raw": "four",
    "type": "paragraph",
    "value": "four",
  },
]
`;

exports[`lexer codeblock should be set just with indentation bigger or equals to 4 but consecutive with other tokens 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "zero one two
    one
          two
    three
four",
    "type": "paragraph",
    "value": "zero one two one two three four",
  },
]
`;

exports[`lexer codeblock should cope with empty body 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
\`\`\`",
    "type": "code-block",
    "value": "",
  },
]
`;

exports[`lexer codeblock should cope with multiple items 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
\`\`\`",
    "type": "code-block",
    "value": "const a = 1",
  },
  Object {
    "indent": 0,
    "raw": "some people are funny",
    "type": "paragraph",
    "value": "some people are funny",
  },
]
`;

exports[`lexer codeblock should detect acceptable indent for closing codeblock 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
const b = 2
const c = 3
   \`\`\`",
    "type": "code-block",
    "value": "const a = 1
const b = 2
const c = 3",
  },
]
`;

exports[`lexer codeblock should detect mis-indented closing codeblock 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
const b = 2
const c = 3
    \`\`\`",
    "type": "code-block",
    "value": "const a = 1
const b = 2
const c = 3
    \`\`\`",
  },
]
`;

exports[`lexer codeblock should not be broken with acceptable wrong indent 1`] = `
Array [
  Object {
    "indent": 0,
    "language": null,
    "raw": "   \`\`\`
abcd
   \`\`\`",
    "type": "code-block",
    "value": "abcd",
  },
]
`;

exports[`lexer codeblock should parse multiple consecutive codeblocks 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
\`\`\`",
    "type": "code-block",
    "value": "const a = 1",
  },
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const b = 2
\`\`\`",
    "type": "code-block",
    "value": "const b = 2",
  },
]
`;

exports[`lexer codeblock should parse the codeblock 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
\`\`\`",
    "type": "code-block",
    "value": "const a = 1",
  },
]
`;

exports[`lexer codeblock should parse the codeblock with multiple lines 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
const b = 2
\`\`\`",
    "type": "code-block",
    "value": "const a = 1
const b = 2",
  },
]
`;

exports[`lexer codeblock should parse the codeblock with multiple lines and a newline 1`] = `
Array [
  Object {
    "indent": 0,
    "language": "js",
    "raw": "\`\`\`js
const a = 1
  const b = 2

const c = 3
\`\`\`",
    "type": "code-block",
    "value": "const a = 1
  const b = 2

const c = 3",
  },
]
`;

exports[`lexer codeblock should parse the codeblock without the language 1`] = `
Array [
  Object {
    "indent": 0,
    "language": null,
    "raw": "\`\`\`
const a = 1
\`\`\`",
    "type": "code-block",
    "value": "const a = 1",
  },
]
`;

exports[`lexer codeblock should set incomplete codeblock as a code block 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "some line",
    "type": "paragraph",
    "value": "some line",
  },
  Object {
    "indent": 4,
    "language": "js",
    "raw": "    \`\`\`js
    const a = 1
    const b = 2",
    "type": "code-block",
    "value": "const a = 1
const b = 2",
  },
  Object {
    "indent": 0,
    "raw": "here again",
    "type": "paragraph",
    "value": "here again",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '![alt text](image.png)' 1`] = `
Array [
  Object {
    "alt": "alt text",
    "indent": 0,
    "raw": "![alt text](image.png)",
    "type": "image",
    "url": "image.png",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '# Heading One Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 1,
    "raw": "# Heading One Text",
    "type": "heading",
    "value": "Heading One Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '## Heading Two Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 2,
    "raw": "## Heading Two Text",
    "type": "heading",
    "value": "Heading Two Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '### Heading Three Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 3,
    "raw": "### Heading Three Text",
    "type": "heading",
    "value": "Heading Three Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '#### Heading Four Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 4,
    "raw": "#### Heading Four Text",
    "type": "heading",
    "value": "Heading Four Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '##### Heading Five Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 5,
    "raw": "##### Heading Five Text",
    "type": "heading",
    "value": "Heading Five Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '###### Heading Six Text' 1`] = `
Array [
  Object {
    "indent": 0,
    "level": 6,
    "raw": "###### Heading Six Text",
    "type": "heading",
    "value": "Heading Six Text",
  },
]
`;

exports[`lexer common tokens should parse the common tokens: '<!-- comment item text -->' 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "<!-- comment item text -->",
    "type": "comment",
    "value": "comment item text",
  },
]
`;

exports[`lexer emphasis bold should be deep tokenized 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "**bold with \`code\` and *italics* and ~~strikes~~ and [link](https://kiranparajuli.com.np)**",
    "type": "paragraph",
    "value": "**bold with \`code\` and *italics* and ~~strikes~~ and [link](https://kiranparajuli.com.np)**",
  },
]
`;

exports[`lexer emphasis bold should match the consecutive occurrences 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "**first bold** **second bold** **third bold**",
    "type": "paragraph",
    "value": "**first bold** **second bold** **third bold**",
  },
]
`;

exports[`lexer emphasis code should match the consecutive occurrences 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "\`first code\` \`second code\` \`third code\`",
    "type": "paragraph",
    "value": "\`first code\` \`second code\` \`third code\`",
  },
]
`;

exports[`lexer emphasis code should not be deep tokenized 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "\`code with ~ gem and **bold** and *italics* and [link](https://kiranparajuli.com.np)\`",
    "type": "paragraph",
    "value": "\`code with ~ gem and **bold** and *italics* and [link](https://kiranparajuli.com.np)\`",
  },
]
`;

exports[`lexer emphasis italics should be deep tokenized 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "*italics with \`code\` and ~~strikes~~ and [link](https://kiranparajuli.com.np)*",
    "type": "paragraph",
    "value": "*italics with \`code\` and ~~strikes~~ and [link](https://kiranparajuli.com.np)*",
  },
]
`;

exports[`lexer emphasis italics should match the consecutive occurrences 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "*first italics* *second italics* *third italics*",
    "type": "paragraph",
    "value": "*first italics* *second italics* *third italics*",
  },
]
`;

exports[`lexer emphasis link should deep tokenized the link title 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "[*italic* with **bold** and \`code\`](https://kiranparajuli.com.np)",
    "type": "paragraph",
    "value": "[*italic* with **bold** and \`code\`](https://kiranparajuli.com.np)",
  },
]
`;

exports[`lexer emphasis link should match the consecutive occurrences 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "[link](https://kiranparajuli.com.np) [link](https://kiranparajuli.com.np)",
    "type": "paragraph",
    "value": "[link](https://kiranparajuli.com.np) [link](https://kiranparajuli.com.np)",
  },
]
`;

exports[`lexer emphasis strikes should be deep tokenized 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "~~strikes with ~ gem and \`code\` and **bold** and *italics* and [link](https://kiranparajuli.com.np)~~",
    "type": "paragraph",
    "value": "~~strikes with ~ gem and \`code\` and **bold** and *italics* and [link](https://kiranparajuli.com.np)~~",
  },
]
`;

exports[`lexer emphasis strikes should match the consecutive occurrences 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "~~first strikes~~ ~~second strikes~~ ~~third strikes~~",
    "type": "paragraph",
    "value": "~~first strikes~~ ~~second strikes~~ ~~third strikes~~",
  },
]
`;

exports[`lexer list less than 4 indent should not break the list 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item **1**",
            "type": "paragraph",
            "value": "item **1**",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item [link](link-url)",
            "type": "paragraph",
            "value": "item [link](link-url)",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item 3 \`code item\`",
            "type": "paragraph",
            "value": "item 3 \`code item\`",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item 4",
            "type": "paragraph",
            "value": "item 4",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should allow lazy lexing 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "list *item* one
omg this is merged with the above line",
            "type": "paragraph",
            "value": "list *item* one omg this is merged with the above line",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": true,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should allow lazy unless there is two line separator 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "one
            two
three",
            "type": "paragraph",
            "value": "one two three",
          },
          Object {
            "type": "new-line",
          },
          Object {
            "indent": 0,
            "language": null,
            "raw": "	 \`\`\`
	 here
	 four
	 \`\`\`",
            "type": "code-block",
            "value": "here
four",
          },
          Object {
            "type": "new-line",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "two",
            "type": "paragraph",
            "value": "two",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "three",
            "type": "paragraph",
            "value": "three",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should tokenize a valid ordered list 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item **1**",
            "type": "paragraph",
            "value": "item **1**",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item [link](link-url)",
            "type": "paragraph",
            "value": "item [link](link-url)",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item 3 \`code item\`",
            "type": "paragraph",
            "value": "item 3 \`code item\`",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": null,
      "ordered": true,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should tokenize a valid un-ordered list 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item **1**",
            "type": "paragraph",
            "value": "item **1**",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item [link](link-url)",
            "type": "paragraph",
            "value": "item [link](link-url)",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item 3 \`code item\`",
            "type": "paragraph",
            "value": "item 3 \`code item\`",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should tokenize list combination 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "one",
            "type": "paragraph",
            "value": "one",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "two",
            "type": "paragraph",
            "value": "two",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "one",
            "type": "paragraph",
            "value": "one",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": "2",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "two",
            "type": "paragraph",
            "value": "two",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": null,
      "ordered": true,
    },
    "type": "list",
  },
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "c empty",
            "type": "paragraph",
            "value": "c empty",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "c checked",
            "type": "paragraph",
            "value": "c checked",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": true,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "c empty",
            "type": "paragraph",
            "value": "c empty",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": "1",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "c checked",
            "type": "paragraph",
            "value": "c checked",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": true,
      "identifier": null,
      "ordered": true,
    },
    "type": "list",
  },
]
`;

exports[`lexer list should tokenize the nested list 1`] = `
Array [
  Object {
    "indent": 0,
    "items": Array [
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item **1**",
            "type": "paragraph",
            "value": "item **1**",
          },
        ],
        "type": "list-item",
      },
      Object {
        "checked": null,
        "count": null,
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "item [link](link-url)",
            "type": "paragraph",
            "value": "item [link](link-url)",
          },
          Object {
            "indent": 4,
            "items": Array [
              Object {
                "checked": null,
                "count": null,
                "tokens": Array [
                  Object {
                    "indent": 0,
                    "raw": "item 3 \`code item\`",
                    "type": "paragraph",
                    "value": "item 3 \`code item\`",
                  },
                  Object {
                    "indent": 8,
                    "items": Array [
                      Object {
                        "checked": null,
                        "count": null,
                        "tokens": Array [
                          Object {
                            "indent": 0,
                            "raw": "item 4",
                            "type": "paragraph",
                            "value": "item 4",
                          },
                        ],
                        "type": "list-item",
                      },
                    ],
                    "meta": Object {
                      "check": false,
                      "identifier": "-",
                      "ordered": false,
                    },
                    "type": "list",
                  },
                ],
                "type": "list-item",
              },
              Object {
                "checked": null,
                "count": null,
                "tokens": Array [
                  Object {
                    "indent": 0,
                    "raw": "item 5 ~~strike~~",
                    "type": "paragraph",
                    "value": "item 5 ~~strike~~",
                  },
                ],
                "type": "list-item",
              },
            ],
            "meta": Object {
              "check": false,
              "identifier": "-",
              "ordered": false,
            },
            "type": "list",
          },
        ],
        "type": "list-item",
      },
    ],
    "meta": Object {
      "check": false,
      "identifier": "-",
      "ordered": false,
    },
    "type": "list",
  },
]
`;

exports[`lexer paragraph should be deep tokenized 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "some normal and **bold with * gem** but pure *italics* is alos there baby now ~~coming~~hola amigons~~strike~~ wooo lala what about blazing *********here baby ~~~~~~~~~baby \`baby\`\`\`[[[[[[[[[[[[[[[l]]]]int](href)[link](href)\`\`\`\`\`\`\`\`\`\`",
    "type": "paragraph",
    "value": "some normal and **bold with * gem** but pure *italics* is alos there baby now ~~coming~~hola amigons~~strike~~ wooo lala what about blazing *********here baby ~~~~~~~~~baby \`baby\`\`\`[[[[[[[[[[[[[[[l]]]]int](href)[link](href)\`\`\`\`\`\`\`\`\`\`",
  },
]
`;

exports[`lexer paragraph should be deep tokenized 2`] = `
Array [
  Object {
    "indent": 0,
    "raw": "a paragraph of <u>words</u> \`first code\` normal text here \`code body\` *first italics* here me crying *italic body* here me crying **first bolds** some normal again **bold body** [Kiran Parajuli](https://kiranparajuli.com.np) ~~strikes body~~ here some",
    "type": "paragraph",
    "value": "a paragraph of <u>words</u> \`first code\` normal text here \`code body\` *first italics* here me crying *italic body* here me crying **first bolds** some normal again **bold body** [Kiran Parajuli](https://kiranparajuli.com.np) ~~strikes body~~ here some",
  },
]
`;

exports[`lexer paragraph should be deep tokenized 3`] = `
Array [
  Object {
    "indent": 0,
    "raw": "now with __underlined text__ within some ___underl_ined_text___",
    "type": "paragraph",
    "value": "now with __underlined text__ within some ___underl_ined_text___",
  },
]
`;

exports[`lexer paragraph should be separated with other tokens 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "abc",
    "type": "paragraph",
    "value": "abc",
  },
  Object {
    "indent": 0,
    "level": 1,
    "raw": "# one",
    "type": "heading",
    "value": "one",
  },
  Object {
    "indent": 0,
    "raw": "def",
    "type": "paragraph",
    "value": "def",
  },
]
`;

exports[`lexer paragraph should merge consecutive paragraph not separated by other tokens 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "  abc
  def",
    "type": "paragraph",
    "value": "  abc def",
  },
]
`;

exports[`lexer quote list inside should identify list inside the quote 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> - one
> - two",
    "tokens": Array [
      Object {
        "indent": 0,
        "items": Array [
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "one",
                "type": "paragraph",
                "value": "one",
              },
            ],
            "type": "list-item",
          },
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "two",
                "type": "paragraph",
                "value": "two",
              },
            ],
            "type": "list-item",
          },
        ],
        "meta": Object {
          "check": false,
          "identifier": "-",
          "ordered": false,
        },
        "type": "list",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote list inside should identify list inside with multiple separator in between 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> - one
>
>
> - two",
    "tokens": Array [
      Object {
        "indent": 0,
        "items": Array [
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "one",
                "type": "paragraph",
                "value": "one",
              },
              Object {
                "type": "new-line",
              },
            ],
            "type": "list-item",
          },
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "two",
                "type": "paragraph",
                "value": "two",
              },
            ],
            "type": "list-item",
          },
        ],
        "meta": Object {
          "check": false,
          "identifier": "-",
          "ordered": false,
        },
        "type": "list",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote list inside should identify list inside with single separator in between 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> - one
>
> - two",
    "tokens": Array [
      Object {
        "indent": 0,
        "items": Array [
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "one",
                "type": "paragraph",
                "value": "one",
              },
              Object {
                "type": "new-line",
              },
            ],
            "type": "list-item",
          },
          Object {
            "checked": null,
            "count": null,
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "two",
                "type": "paragraph",
                "value": "two",
              },
            ],
            "type": "list-item",
          },
        ],
        "meta": Object {
          "check": false,
          "identifier": "-",
          "ordered": false,
        },
        "type": "list",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should allow laziness for plain paragraph 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one quote
> two quote
three quote",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one quote two quote three quote",
        "type": "paragraph",
        "value": "one quote two quote three quote",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should chill with big quote head 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> > > three hit
> > two hit
>
>
> > two
> > # h-two
> > > three
> > > > four
some",
    "tokens": Array [
      Object {
        "depth": 2,
        "indent": 0,
        "raw": "> > three hit two hit",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "three hit two hit",
            "type": "paragraph",
            "value": "three hit two hit",
          },
        ],
        "type": "quote",
      },
      Object {
        "type": "new-line",
      },
      Object {
        "depth": 1,
        "indent": 0,
        "raw": "> two
> # h-two
> > three
> > > four some",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "two",
            "type": "paragraph",
            "value": "two",
          },
          Object {
            "indent": 0,
            "level": 1,
            "raw": "# h-two",
            "type": "heading",
            "value": "h-two",
          },
          Object {
            "depth": 1,
            "indent": 0,
            "raw": "> three
> > four some",
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "three",
                "type": "paragraph",
                "value": "three",
              },
              Object {
                "depth": 1,
                "indent": 0,
                "raw": "> four some",
                "tokens": Array [
                  Object {
                    "indent": 0,
                    "raw": "four some",
                    "type": "paragraph",
                    "value": "four some",
                  },
                ],
                "type": "quote",
              },
            ],
            "type": "quote",
          },
        ],
        "type": "quote",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote '  > quote \`four\` with ~~five~~' 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "  > quote \`four\` with ~~five~~",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote \`four\` with ~~five~~",
        "type": "paragraph",
        "value": "quote \`four\` with ~~five~~",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote ' > > > quote \`four\` with ~~five~~' 1`] = `
Array [
  Object {
    "depth": 3,
    "indent": 0,
    "raw": " > > > quote \`four\` with ~~five~~",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote \`four\` with ~~five~~",
        "type": "paragraph",
        "value": "quote \`four\` with ~~five~~",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote '' 1`] = `Array []`;

exports[`lexer quote should deep tokenize quote '> > > > quote [link-title](link-url) with *two*' 1`] = `
Array [
  Object {
    "depth": 4,
    "indent": 0,
    "raw": "> > > > quote [link-title](link-url) with *two*",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote [link-title](link-url) with *two*",
        "type": "paragraph",
        "value": "quote [link-title](link-url) with *two*",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote '> > quote **one** with *two*' 1`] = `
Array [
  Object {
    "depth": 2,
    "indent": 0,
    "raw": "> > quote **one** with *two*",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote **one** with *two*",
        "type": "paragraph",
        "value": "quote **one** with *two*",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote '> quote **one** with *two*' 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> quote **one** with *two*",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote **one** with *two*",
        "type": "paragraph",
        "value": "quote **one** with *two*",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should deep tokenize quote '> quote [link-title](link-url) with *two*' 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> quote [link-title](link-url) with *two*",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "quote [link-title](link-url) with *two*",
        "type": "paragraph",
        "value": "quote [link-title](link-url) with *two*",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should leave separators 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one
> # two
>
>
>
> three",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one",
        "type": "paragraph",
        "value": "one",
      },
      Object {
        "indent": 0,
        "level": 1,
        "raw": "# two",
        "type": "heading",
        "value": "two",
      },
      Object {
        "type": "new-line",
      },
      Object {
        "indent": 0,
        "raw": "three",
        "type": "paragraph",
        "value": "three",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should lex multiline quote with the circular depth 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one
> > two
> > > three
> > > > four
> > >
>>> r_three
> >
> > r_two
>
> r_one",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one",
        "type": "paragraph",
        "value": "one",
      },
      Object {
        "depth": 1,
        "indent": 0,
        "raw": "> two
> > three
> > > four
> >
>> r_three
>
> r_two",
        "tokens": Array [
          Object {
            "indent": 0,
            "raw": "two",
            "type": "paragraph",
            "value": "two",
          },
          Object {
            "depth": 1,
            "indent": 0,
            "raw": "> three
> > four
>
> r_three",
            "tokens": Array [
              Object {
                "indent": 0,
                "raw": "three",
                "type": "paragraph",
                "value": "three",
              },
              Object {
                "depth": 1,
                "indent": 0,
                "raw": "> four",
                "tokens": Array [
                  Object {
                    "indent": 0,
                    "raw": "four",
                    "type": "paragraph",
                    "value": "four",
                  },
                ],
                "type": "quote",
              },
              Object {
                "type": "new-line",
              },
              Object {
                "indent": 0,
                "raw": "r_three",
                "type": "paragraph",
                "value": "r_three",
              },
            ],
            "type": "quote",
          },
          Object {
            "type": "new-line",
          },
          Object {
            "indent": 0,
            "raw": "r_two",
            "type": "paragraph",
            "value": "r_two",
          },
        ],
        "type": "quote",
      },
      Object {
        "type": "new-line",
      },
      Object {
        "indent": 0,
        "raw": "r_one",
        "type": "paragraph",
        "value": "r_one",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should not be lazy with heading 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one
> # two
> three",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one",
        "type": "paragraph",
        "value": "one",
      },
      Object {
        "indent": 0,
        "level": 1,
        "raw": "# two",
        "type": "heading",
        "value": "two",
      },
      Object {
        "indent": 0,
        "raw": "three",
        "type": "paragraph",
        "value": "three",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should not be lazy with heading 2`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> # one
> two
> three",
    "tokens": Array [
      Object {
        "indent": 0,
        "level": 1,
        "raw": "# one",
        "type": "heading",
        "value": "one",
      },
      Object {
        "indent": 0,
        "raw": "two three",
        "type": "paragraph",
        "value": "two three",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer quote should split with heading in between 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one quote
> two quote",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one quote two quote",
        "type": "paragraph",
        "value": "one quote two quote",
      },
    ],
    "type": "quote",
  },
  Object {
    "indent": 0,
    "level": 1,
    "raw": "# three quote",
    "type": "heading",
    "value": "three quote",
  },
]
`;

exports[`lexer quote should split with new lines in between 1`] = `
Array [
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> one quote",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "one quote",
        "type": "paragraph",
        "value": "one quote",
      },
    ],
    "type": "quote",
  },
  Object {
    "type": "new-line",
  },
  Object {
    "depth": 1,
    "indent": 0,
    "raw": "> two quote
three quote",
    "tokens": Array [
      Object {
        "indent": 0,
        "raw": "two quote three quote",
        "type": "paragraph",
        "value": "two quote three quote",
      },
    ],
    "type": "quote",
  },
]
`;

exports[`lexer table cell count cell count should break the table 1 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
  Object {
    "indent": 0,
    "raw": "| row 2 c1 |",
    "type": "paragraph",
    "value": "| row 2 c1 |",
  },
]
`;

exports[`lexer table cell count cell count should break the table 2 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table heading body separator should parse a table with separator: '| :-------: | :---------: |' 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
      Array [
        Object {
          "raw": " row 2 c1 ",
          "value": "row 2 c1",
        },
        Object {
          "raw": " row 2 c2 ",
          "value": "row 2 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table heading body separator should parse a table with separator: '| ------- | --------- |' 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
      Array [
        Object {
          "raw": " row 2 c1 ",
          "value": "row 2 c1",
        },
        Object {
          "raw": " row 2 c2 ",
          "value": "row 2 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table heading body separator should parse a table with separator: '|:-------:|:---------:|' 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
      Array [
        Object {
          "raw": " row 2 c1 ",
          "value": "row 2 c1",
        },
        Object {
          "raw": " row 2 c2 ",
          "value": "row 2 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table heading body separator should parse a table with separator: '|-------|-------|' 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
      Array [
        Object {
          "raw": " row 2 c1 ",
          "value": "row 2 c1",
        },
        Object {
          "raw": " row 2 c2 ",
          "value": "row 2 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table indentation different indent header -> separator 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |
    |---|---|
| row 1 c1 | row 1 c2 |",
    "type": "paragraph",
    "value": "| column 1 | column 2 | |---|---| | row 1 c1 | row 1 c2 |",
  },
]
`;

exports[`lexer table indentation different indent header, separator -> body row 1`] = `
Array [
  Object {
    "indent": 4,
    "language": null,
    "raw": "    | column 1 | column 2 |
    |---|---|",
    "type": "code-block",
    "value": "| column 1 | column 2 |
|---|---|",
  },
  Object {
    "indent": 0,
    "raw": "| row 1 c1 | row 1 c2 |",
    "type": "paragraph",
    "value": "| row 1 c1 | row 1 c2 |",
  },
]
`;

exports[`lexer table indentation indent should break the table 1 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
  Object {
    "indent": 4,
    "raw": "    | row 2 c1 | row 2 c2 |",
    "type": "paragraph",
    "value": "    | row 2 c1 | row 2 c2 |",
  },
]
`;

exports[`lexer table indentation indent should break the table 2 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
  Object {
    "indent": 4,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table indentation the indented table 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
]
`;

exports[`lexer table is not a table false separator 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |
| --- |--|
| row 1 c1 | row 1 c2 |",
    "type": "paragraph",
    "value": "| column 1 | column 2 | | --- |--| | row 1 c1 | row 1 c2 |",
  },
]
`;

exports[`lexer table is not a table only header 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |",
    "type": "paragraph",
    "value": "| column 1 | column 2 |",
  },
]
`;

exports[`lexer table is not a table only header and separator 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |
|---|---|",
    "type": "paragraph",
    "value": "| column 1 | column 2 | |---|---|",
  },
]
`;

exports[`lexer table is not a table other tokens in between 1 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |",
    "type": "paragraph",
    "value": "| column 1 | column 2 |",
  },
  Object {
    "type": "new-line",
  },
  Object {
    "indent": 0,
    "raw": "|---|---|
| row 1 c1 | row 1 c2 |",
    "type": "paragraph",
    "value": "|---|---| | row 1 c1 | row 1 c2 |",
  },
]
`;

exports[`lexer table is not a table other tokens in between 2 1`] = `
Array [
  Object {
    "indent": 0,
    "raw": "| column 1 | column 2 |
|---|---|",
    "type": "paragraph",
    "value": "| column 1 | column 2 | |---|---|",
  },
  Object {
    "type": "new-line",
  },
  Object {
    "indent": 0,
    "raw": "| row 1 c1 | row 1 c2 |",
    "type": "paragraph",
    "value": "| row 1 c1 | row 1 c2 |",
  },
]
`;

exports[`lexer table is not a table other tokens in between 3 1`] = `
Array [
  Object {
    "indent": 0,
    "rows": Array [
      Array [
        Object {
          "raw": " column 1 ",
          "value": "column 1",
        },
        Object {
          "raw": " column 2 ",
          "value": "column 2",
        },
      ],
      Array [
        Object {
          "raw": " row 1 c1 ",
          "value": "row 1 c1",
        },
        Object {
          "raw": " row 1 c2 ",
          "value": "row 1 c2",
        },
      ],
    ],
    "type": "table",
  },
  Object {
    "type": "new-line",
  },
  Object {
    "indent": 0,
    "raw": "| row 2 c1 | row 2 c2 |",
    "type": "paragraph",
    "value": "| row 2 c1 | row 2 c2 |",
  },
]
`;
