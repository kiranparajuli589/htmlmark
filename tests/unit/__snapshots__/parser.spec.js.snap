// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser bold should be deep tokenized 1`] = `
"
<p><strong>bold with <code>code</code> and <em>italics</em> and <s>strikes</s> and <a href='https://kiranparajuli.com.np'>link</a></strong></p>"
`;

exports[`Parser bold should match the consecutive occurrences 1`] = `
"
<p><strong>first bold</strong> <strong>second bold</strong> <strong>third bold</strong></p>"
`;

exports[`Parser code should match the consecutive occurrences 1`] = `
"
<p><code>first code</code> <code>second code</code> <code>third code</code></p>"
`;

exports[`Parser code should not be deep tokenized 1`] = `
"
<p><code>code with ~ gem and <strong>bold</strong> and <em>italics</em> and <a href='https://kiranparajuli.com.np'>link</a></code></p>"
`;

exports[`Parser codeblock should cope with multiple items 1`] = `
"
<pre><code class='language-js'>const a = 1</code></pre>
<p>some people are funny</p>"
`;

exports[`Parser codeblock should parse multiple consequetive codeblocks 1`] = `
"
<pre><code class='language-js'>const a = 1</code></pre>
<pre><code class='language-js'>const b = 2</code></pre>"
`;

exports[`Parser codeblock should parse the codeblock 1`] = `
"
<pre><code class='language-js'>const a = 1</code></pre>"
`;

exports[`Parser codeblock should parse the codeblock with multiple lines 1`] = `
"
<pre><code class='language-js'>const a = 1
const b = 2</code></pre>"
`;

exports[`Parser codeblock should parse the codeblock with multiple lines and a newline 1`] = `
"
<pre><code class='language-js'>const a = 1
const b = 2

const c = 3</code></pre>"
`;

exports[`Parser codeblock should parse the codeblock without the language 1`] = `
"
<pre><code>const a = 1</code></pre>"
`;

exports[`Parser common tokens should parse the common tokens 1`] = `
"
<h1>Heading One Text</h1>"
`;

exports[`Parser common tokens should parse the common tokens 2`] = `
"
<h2>Heading Two Text</h2>"
`;

exports[`Parser common tokens should parse the common tokens 3`] = `
"
<h3>Heading Three Text</h3>"
`;

exports[`Parser common tokens should parse the common tokens 4`] = `
"
<h4>Heading Four Text</h4>"
`;

exports[`Parser common tokens should parse the common tokens 5`] = `
"
<h5>Heading Five Text</h5>"
`;

exports[`Parser common tokens should parse the common tokens 6`] = `
"
<h6>Heading Six Text</h6>"
`;

exports[`Parser common tokens should parse the common tokens 7`] = `""`;

exports[`Parser common tokens should parse the common tokens 8`] = `
"
<img src=\\"image.png\\" alt=\\"alt text\\">"
`;

exports[`Parser common tokens should parse the common tokens with some space before 1`] = `
"
<h1>Heading One Text</h1>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 2`] = `
"
<h2>Heading Two Text</h2>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 3`] = `
"
<h3>Heading Three Text</h3>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 4`] = `
"
<h4>Heading Four Text</h4>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 5`] = `
"
<h5>Heading Five Text</h5>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 6`] = `
"
<h6>Heading Six Text</h6>"
`;

exports[`Parser common tokens should parse the common tokens with some space before 7`] = `""`;

exports[`Parser common tokens should parse the common tokens with some space before 8`] = `
"
<img src=\\"image.png\\" alt=\\"alt text\\">"
`;

exports[`Parser hr line should not allow multiple consecutive hr lines 1`] = `
"
<hr>"
`;

exports[`Parser hr line should parse the hr line 1`] = `
"
<hr>"
`;

exports[`Parser italics should be deep tokenized 1`] = `
"
<p><em>italics with <code>code</code> and <s>strikes</s> and <a href='https://kiranparajuli.com.np'>link</a></em></p>"
`;

exports[`Parser italics should match the consecutive occurrences 1`] = `
"
<p><em>first italics</em> <em>second italics</em> <em>third italics</em></p>"
`;

exports[`Parser link should deep tokenized the link title 1`] = `
"
<p><a href='https://kiranparajuli.com.np'><em>italic</em> with <strong>bold</strong> and <code>code</code></a></p>"
`;

exports[`Parser link should match the consecutive occurrences 1`] = `
"
<p><a href='https://kiranparajuli.com.np'>link</a> <a href='https://kiranparajuli.com.np'>link</a></p>"
`;

exports[`Parser list indent should break the list 1`] = `
"
<ul>
  <li>item <strong>1</strong></li><li>item <a href='link-url'>link</a></li>
</ul>
<ul>
  <li>item 3 <code>code item</code></li><li>item 4</li>
</ul>"
`;

exports[`Parser list should detect list indent 1`] = `
"
<ul>
  <li>item <strong>1</strong></li><li>item <a href='link-url'>link</a></li><li>item 3 <code>code item</code></li>
</ul>"
`;

exports[`Parser list should tokenize a valid ordered list 1`] = `
"
<ol>
  <li>item <strong>1</strong></li><li>item <a href='link-url'>link</a></li><li>item 3 <code>code item</code></li>
</ol>"
`;

exports[`Parser list should tokenize a valid un-ordered list 1`] = `
"
<ul>
  <li>item <strong>1</strong></li><li>item <a href='link-url'>link</a></li><li>item 3 <code>code item</code></li>
</ul>"
`;

exports[`Parser list should tokenize list combination 1`] = `
"
<ul>
  <li>one</li><li>two</li>
</ul>
<ol>
  <li>one</li><li>two</li>
</ol>
<ul>
  <li><input type=\\"checkbox\\">c empty</li><li><input type=\\"checkbox\\" checked>c checked</li>
</ul>
<ol>
  <li><input type=\\"checkbox\\">c empty</li><li><input type=\\"checkbox\\" checked>c checked</li>
</ol>"
`;

exports[`Parser newline should combine multiple consequest new lines to a single one 1`] = `
"
<p>some plain text</p>
<br>
<p>some more plain text</p>"
`;

exports[`Parser newline should include the empty line after some content 1`] = `
"
<p>some plain text</p>
<br>"
`;

exports[`Parser newline should include the empty line after some content 2`] = `
"
<p>some plain text</p>
<br>"
`;

exports[`Parser newline should not include the top empty lines 1`] = `""`;

exports[`Parser newline should not include the top empty lines 2`] = `""`;

exports[`Parser newline should not include the top empty lines 3`] = `""`;

exports[`Parser paragraph should be deep tokenized 1`] = `
"
<p>some normal and <strong>bold with <em> gem</strong> but pure </em>italics<em> is alos there baby now <s>coming</s>hola amigons<s>strike</s> wooo lala what about blazing <strong>****</em></strong>here baby <s>~~~~~</s>baby <code>baby\`\`</code><a href='href'>[[[[[[[[[[[[[[l]]]]int</a><a href='href'>link</a><code>\`\`\`\`\`\`\`\`</code></p>"
`;

exports[`Parser paragraph should be deep tokenized 2`] = `
"
<p>a paragraph of <u>words</u> <code>first code</code> normal text here <code>code body</code> <em>first italics</em> here me crying <em>italic body</em> here me crying <strong>first bolds</strong> some normal again <strong>bold body</strong> <a href='https://kiranparajuli.com.np'>Kiran Parajuli</a> <s>strikes body</s> here some</p>"
`;

exports[`Parser paragraph should be deep tokenized 3`] = `
"
<p>now with <u>underlined text</u> within some <u>_underl_ined_text_</u></p>"
`;

exports[`Parser quote should deep tokenize quote with multiple depth 1`] = `
"<blockquote><blockquote>
<p> quote <strong>one</strong> with <em>two</em></p>
</blockquote></blockquote>"
`;

exports[`Parser quote should deep tokenize quote with multiple depth 2`] = `
"<blockquote><blockquote><blockquote>
<p> quote <code>four</code> with <s>five</s></p>
</blockquote></blockquote></blockquote>"
`;

exports[`Parser quote should deep tokenize quote with multiple depth 3`] = `
"<blockquote><blockquote><blockquote><blockquote>
<p> quote <a href='link-url'>link-title</a> with <em>two</em></p>
</blockquote></blockquote></blockquote></blockquote>"
`;

exports[`Parser quote should deep tokenize quote with zero depth 1`] = `
"<blockquote>
<p> quote <strong>one</strong> with <em>two</em></p>
</blockquote>"
`;

exports[`Parser quote should deep tokenize quote with zero depth 2`] = `
"<blockquote>
<p> quote <code>four</code> with <s>five</s></p>
</blockquote>"
`;

exports[`Parser quote should deep tokenize quote with zero depth 3`] = `
"<blockquote>
<p> quote <a href='link-url'>link-title</a> with <em>two</em></p>
</blockquote>"
`;

exports[`Parser quote should detect the quote depth 1`] = `
"<blockquote>
<p> quote 1</p>
</blockquote>"
`;

exports[`Parser quote should detect the quote depth 2`] = `
"<blockquote><blockquote>
<p> quote 2</p>
</blockquote></blockquote>"
`;

exports[`Parser quote should detect the quote depth 3`] = `
"<blockquote><blockquote><blockquote>
<p> quote 3</p>
</blockquote></blockquote></blockquote>"
`;

exports[`Parser quote should detect the quote depth 4`] = `
"<blockquote><blockquote><blockquote><blockquote>
<p> quote 4</p>
</blockquote></blockquote></blockquote></blockquote>"
`;

exports[`Parser quote should detect the quote depth 5`] = `
"<blockquote><blockquote><blockquote><blockquote><blockquote>
<p> quote 5</p>
</blockquote></blockquote></blockquote></blockquote></blockquote>"
`;

exports[`Parser quote should find nested depth 1`] = `
"<blockquote>
<p> one</p><blockquote>
<p> two</p>
</blockquote><blockquote><blockquote>
<p> three</p>
</blockquote></blockquote><blockquote><blockquote><blockquote>
<p> four</p>
</blockquote></blockquote></blockquote>
</blockquote>"
`;

exports[`Parser quote should parse multiline quote with the same depth and indent 1`] = `
"<blockquote><blockquote><blockquote>
<p> zero f one f</p>
<br>
</blockquote></blockquote>
<p> one</p>
<h1>two</h1><blockquote>
<p> three</p>
</blockquote><blockquote><blockquote>
<p> four</p>
</blockquote></blockquote><blockquote><blockquote><blockquote>
<p> d-five</p>
<h1>five</h1>
<h2>six</h2>
<p> seven simple para</p>
</blockquote></blockquote></blockquote>
</blockquote>"
`;

exports[`Parser strikes should be deep tokenized 1`] = `
"
<p><s>strikes with ~ gem and <code>code</code> and <strong>bold</strong> and <em>italics</em> and <a href='https://kiranparajuli.com.np'>link</a></s></p>"
`;

exports[`Parser strikes should match the consecutive occurrences 1`] = `
"
<p><s>first strikes</s> <s>second strikes</s> <s>third strikes</s></p>"
`;

exports[`Parser table is not a table false separator 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>"
`;

exports[`Parser table is not a table not consistent cell count 1`] = `
"
<p>| column 1 | column 2 | | --- | | row 1 c1 | row 1 c2 |</p>"
`;

exports[`Parser table is not a table only header 1`] = `
"
<p>| column 1 | column 2 |</p>"
`;

exports[`Parser table is not a table only header and separator 1`] = `
"
<p>| column 1 | column 2 | |---|---|</p>"
`;

exports[`Parser table is not a table other tokens in between 1 1`] = `
"
<p>| column 1 | column 2 |</p>
<br>
<p>|---|---| | row 1 c1 | row 1 c2 |</p>"
`;

exports[`Parser table is not a table other tokens in between 2 1`] = `
"
<p>| column 1 | column 2 | |---|---|</p>
<br>
<p>| row 1 c1 | row 1 c2 |</p>"
`;

exports[`Parser table is not a table other tokens in between 3 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>
<br>
<p>| row 2 c1 | row 2 c2 |</p>"
`;

exports[`Parser table table cell count cell count should break the table 1 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>
<p>| row 2 c1 |</p>"
`;

exports[`Parser table table cell count cell count should break the table 2 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>
<table>
  <thead>
    <tr><th>column 1</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td></tr>
  </tbody>
</table>"
`;

exports[`Parser table table heading-body separator should parse a table 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr><tr><td>row 2 c1</td><td>row 2 c2</td></tr>
  </tbody>
</table>"
`;

exports[`Parser table table heading-body separator should parse a table 2`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr><tr><td>row 2 c1</td><td>row 2 c2</td></tr>
  </tbody>
</table>"
`;

exports[`Parser table table indent different indent header -> separator 1`] = `
"
<p>| column 1 | column 2 |</p>
<p>  |---|---|</p>
<p>| row 1 c1 | row 1 c2 |</p>"
`;

exports[`Parser table table indent different indent header, separator -> body row 1`] = `
"
<p>  | column 1 | column 2 | |---|---|</p>
<p>| row 1 c1 | row 1 c2 |</p>"
`;

exports[`Parser table table indent indent should break the table 1 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>
<p>| row 2 c1 | row 2 c2 |</p>"
`;

exports[`Parser table table indent indent should break the table 2 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>"
`;

exports[`Parser table table indent the indented table 1`] = `
"
<table>
  <thead>
    <tr><th>column 1</th><th>column 2</th></tr>
  </thead>
  <tbody>
    <tr><td>row 1 c1</td><td>row 1 c2</td></tr>
  </tbody>
</table>"
`;
